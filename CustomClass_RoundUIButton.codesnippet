<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>CM Custom Class RoundUIButton</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import Foundation
import SnapKit

class RoundUIButton: UIButton {
    
    lazy var roundButton: UIButton = {
        let roundButton = UIButton()
        roundButton.contentMode = .scaleAspectFit
        roundButton.tag = 0
        roundButton.frame = CGRect(x: 0, y: 0, width: 100, height: 100)
        roundButton.backgroundColor = UIColor.white
        roundButton.isUserInteractionEnabled = true
        return roundButton
    }()
    
    override init(frame: CGRect) {
        super.init(frame: frame)
    }
    
    convenience init(tag: Int) {
        self.init(frame: UIScreen.main.bounds)
        roundButton.tag = tag
        setupViews()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    private func setupViews() {
        setupRoundButton()
    }
    
    private func setupRoundButton() {
        addSubview(roundButton)
        roundButton.snp.makeConstraints { (make) in
            make.edges.equalTo(self)
        }
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>D7A7896F-1609-4F06-A8AC-C6B9181D58BB</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>Custom Class RoundUIButton</string>
	<key>IDECodeSnippetTitle</key>
	<string>CM Custom Class RoundUIButton</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
