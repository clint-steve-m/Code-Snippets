<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>CM - FIreBase Auth Service</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import Foundation
import FirebaseAuth
import FirebaseDatabase
//import FBSDKLoginKit

class FirAuthService {
    static let manager = FirAuthService()
    private init() {}
    
    public func getCurrentUser() -&gt; User? {
        return Auth.auth().currentUser
    }
    
    public func createAccount(email: String, password: String, handler: @escaping (Error?) -&gt; Void) {
        Auth.auth().createUser(withEmail: email, password: password) { (user, error) in
            if let error = error {
                handler(error)
            } else if let user = user {
                FirDBService.manager.createUser(uid: user.uid)
                
                // Send verification email
                self.sendVerificationEmail(to: user)
            }
        }
    }
    
    private func sendVerificationEmail(to user: User) {
        user.sendEmailVerification(completion: { (error) in
            if let error = error {
                print(error)
            } else {
                print("verification email sent")
            }
        })
    }
    
    public func signIn(email: String, password: String, handler: @escaping (Error?) -&gt; Void) {
        Auth.auth().signIn(withEmail: email, password: password) { (user, error) in
            if let error = error {
                handler(error)
            } else if let user = user {
                print(user)
            }
        }
    }
    
    public func signOut() {
        do {
            try Auth.auth().signOut()
        } catch {
            print(error)
        }
    }
    
    public func forgotPassword(email: String) {
        Auth.auth().sendPasswordReset(withEmail: email) { (error) in
            if let error = error {
                print(error.localizedDescription)
            }
        }
    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>898D97E3-653E-4646-9039-D9F7A40D48CB</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>Reiaz</string>
	<key>IDECodeSnippetTitle</key>
	<string>FireBase Auth Service</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
